<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAB0VSURBVHhe7d0J
        vK33fO/xk0QSREgqxsQQU4KoCjHFkKrpasyiVfRqSy5X1W17NdV76+IqKfe2l2seW5QiNaZaqhQ1xBDV
        GJMghgStOYgk4t7vDyc2+Z9z9rCe9Tzr+b/fr9fn9cprZ5999lr7rOf/22s96/9sAwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAn3aldK/0J+nl
        6aR0RvpaOvfH1X/Xx+r/vSw9Id0zXTEBACtg93Rk+vP0qfT/tthp6X+nW6b62gDAhFwuPTp9NrUW8kVU
        zxL8YTogAQAjukJ6RjontRbtIaq/6/+myycAYIkunh6Tzk6tRXoZfSv997R3AgAGdsP0L6m1KI/RR9MR
        CQAYwG6pfus/P7UW4jGr76meDajvEQBYkEulE1Jr8Z1Sb0iXTgDAFh2UPpxaC+4Uq+/1wAQAbNL10pBv
        7RuqM1OdqwAAbNDN07+n1gK7CtUOg7dJAMA63SN9N7UW1lXqe+m+CQDYhd9OF6TWgrqKfT89PAEADfUW
        usem1iI6h56avE0QANa4WHpeai2cc+rFac8EAN3bJ70xtRbMOfaWZK8AALpWF/P5QGotlHPu/aluOwB0
        5xrp1NRaIHvo0+k6CQC6URfP+XJqLYw99ZV0ywQAs3eHVJfSbS2IPfbt9MsJAGbrP6bzUmsh7LnaK+DY
        BACzc1z6QWotgPrRfVP7IADALOyRnplai54u2gtS7YsAACtr7/TK1FrotONemy6ZAGDl7J/emVoLnHbd
        e9MBCQBWxtXSx1NrYdP6+1iq+xIAJu+w9PnUWtC08c5KN0oAMFm/mL6RWguZNt/Z6U4JACbn3umc1FrA
        tPXOTb+WAGAyHpkuSK2FS4ur9gqo/RQAYFS7peNTa7HScD017Z4AYOn2Si9LrQVKw3dCungCgKW5VPr7
        1FqYtLzemi6TAGBwV0onp9aCpOV3SjooAcBgrpvOSK2FSONVP5NDEwAs3C3TV1NrARq7TzU+NlTL/Ls2
        0ldS/YwAYGHunr6TWgvP2J2UrvIzHxuyA9NUr3HwvXRMAoAt+810fmotOGP3+lRXzauz4Vv/f4gukeoq
        h69a87Ep9f30sAQAm1Lv8X9sai0yU+hFaft185c9AJQ90rNS63OmUO3PUD9DAFi3Wtyek1oLyxSqxW2t
        MQaA7Wpnvtqhr/W5Y/cXac8EALu0TzoxtRaUsauntx+aftaYA0B5UDovtT5/7N6c9k0AsEOXTe9KrYVk
        7OokxKNTy9gDQLlD+lZq/Zmxe1+6fAKAizg4fTK1FpCxq7cfHpl2ZAoDQDkifTm1/tzY1dsXr50A4EI3
        SV9KrYVj7D6TDkk7M5UBoFwjnZpaf3bs6md84wQA234pfTO1Foyx+9dU77vflSkNAOWK6QOp9efH7tvp
        LgmAjj0wTfXktX9Ml07rMbUBoNQFk96YWl9j7GpfhwcnADr0yDTVt6+9JNXlhtdrigNAqX0Knp9aX2fs
        6mdf+zwA0Il6j//TU2tRmEJPTbunjZjqAFCmvqFS/VvY6P0NwIqpLWxfkVoLwdjVb6SPSpsx5QFgu99O
        F6TW1xy716TN3i4AJm7/9PbUWgDGri5i86tps1ZhACj3TN9Nra87du9JByQAZuTK6V9S68A/dl9Pt01b
        sSoDQLlFqkv3tr722H00XTUBMAPXT59LrQP+2J2VfiFt1SoNAKV+Jp9Nra8/dov6mQAwoqNS/YbdOtCP
        3SJ/21y1AaDM/VkZAEZSrzefk1oH+LFb9OvNqzgAlP3SXM/LAGAEj0g9nXG+qgNAqXdm/HVq/V1jt5V3
        ZgCwRL2+53yVB4BSP7enpNbfN4U2szcDAEtSO+e9NLUO4GM39K5zqz4AbFe7M071mZuN7s4IwBLUvvN/
        l1oH7rFbxr7zcxkAygPSHK7PAMDA6spzH0ytA/bY1ZXn/kMa2pwGgDKHKzQCMKBrptNS60A9dsu89vzc
        BoByg/SF1Poexu4z6ZAEwAhumv4ttQ7QY/epdO20LHMcAMrB6ROp9X2M3VfTkQmAJbpr+k5qHZjH7n3p
        8mmZ5joAlJ9L/5xa38vY1b/BoxMAS/CgVCfWtQ7IY/fmtG9atjkPAOWS6Q2p9f2M3ffTQxMAAzoutQ7C
        U+gv0p5pDHMfAMoe6dmp9T1NoeMTAAtWB/9npdaBdwrVwb82sxlLDwPAdlMeAl+ULpYAWIB6+vf1qXXA
        Hbt6+vdhaWw9DQDlN9JUXwaqf6v1bxaALZjyCWB1sZhj0hT0NgCUu6Wpngh6UrpcAmATrp6m+hawr6Vb
        panocQAoN0tTfSvo6elaCYANmPImMGekQ9OU9DoAlClvBvXFdHgCYB1ul6a6Dewp6aA0NT0PAKW2gz45
        tb7fsTs73TkBsBP3Seek1oF07N6aLpOmqPcBoEz5glDnpvsnABqmfCnYE1ItslNlAPiRulzvX6XW9z12
        Q18SGmDl1Pvnn5xaB80p9NS0e5oyA8BP1L+nWmhb3/sUelqa+r8ngMHVb2wvT60D5djVb2y16cwqMABc
        1O+kqT6j9Oq0KvcjwMLVnvlvSq0D5NjVa7b3S6vCANB2rzTVc0relvZLAF25UvpQah0Yx67O2r5TWiUG
        gB07Kn0jtW7L2H0kXSUBdOF66bOpdUAcu7PSjdKqMQDs3GHpc6l1e8buzHTDBDBrN0//nloHwrH7WLpa
        WkUGgF27cvpwat2msaudJW+TAGbpHum7qXUAHLv3pgPSqjIArM/+6R2pdbvGrq4tcd8EMCu/laZ69bbX
        plW/epsBYP32Tq9Irds2dnV1yYcngJU39fdkvyDN4frtBoCN2SM9I7Vu3xSqvSfqsQOwkmphfW5qHeDG
        bm67shkANqd2n6x/C63bOXYvTnsmgJWyT/rb1DqwjV09zXpsmhMDwOb9ejovtW7r2L0lXToBrITLpnen
        1gFt7L6dfjnNjQFga26fvpVat3fs3p+ukAAm7Rrp1NQ6kI3dV9It0xwZALbuJunLqXWbx+7T6ToJYJKO
        SA6g4zAALEYNsJ9Mrds9dnMeYIEVdofkKdTxGAAWx0tYAOs05ZOo/iH1cBKVAWCxnMQKsAveRjUNBoDF
        8zZWgIbaSOWZqXVwmkK9baRiABiGjawA1qitVF+ZWgekset1K1UDwLBsZQ10z8VUpskAMLy7JxezArp0
        YHI51WkyACyHy1kD3TksfT61Djxjd2a6YeqZAWB5rps+m1r3zdidlW6UABbiF9M3UuuAM3YfSVdJvTMA
        LNeV0odS6/4Zu7PTnRLAltw7nZNaB5qxe1vaL2EAGMO+6U2pdR+N3bnpfglgU+o9/hek1gFm7F6dLEQ/
        YQAYx17p5al1P41d7RVwXAJYt6m/9/lpaffETxgAxlOPlz9NrftqCtWeGB4vwC7VbzR/lVoHkrGz+9mO
        GQDGN+VnzE5I9W8EoOlS6e9T6wAydvWa5v0TbQaAabhPmuo5M29Nl0kAP+WK6eTUOnCMXZ3VfOfEjhkA
        puN2aarvmjklHZQAfuha6bTUOmCM3RfT4YmdMwBMyw3SVPfNOCMdmoDO3Sz9W2odKMbu9FTDCbtmAJie
        q6ePp9Z9OHa1c+atEtCpu6XvpNYBYuxOSpdLrI8BYJp+Lr0zte7HsatrZxyTgM78Zprq1c1en1zdbGMM
        ANNVP5tXpdZ9OXZ19cyHJaATj0+tg8EUem5yffONMwBMW/2brn/brftzCtUxAZi5KW/wc3xicwwAq6F2
        5qv9LFr369g9JgEzVU/1tR74Y1cvRTwksXkGgNXx4DTVl9+OTcDMXDNNcYOSOgnx6MTWGABWyx3Tt1Lr
        /h2z76ZrJGBGTkytB/yYfTUdmdg6A8DqOSJN8S24r0vATFw/tR7oY/aZdEhiMQwAq6memTs1te7nMTss
        ATMwtSuV/Ws6MLE4BoDVVdtwfzC17uuxemICZuCTqfUgH6M3p30Ti2UAWG31mKjHRuv+HqOPJWDF7Z1q
        s4/Wg3zZvSTV5YZZPAPA6qu9Ap6fWvf5sqt3KXiswoq7Xmo9wJfdk9NuiWEYAOahHiP1WGnd78vOBYNg
        xd0otR7cy6o2PXlUYlgGgHl5RLogte7/ZfXzCVhhdaZ968G9jOpiI7+aGJ4BYH7umep9+a2fwTJyJU5Y
        cXU1sjG2Hv16um1iOQwA81SPoXostX4OQ1bHjP0SsOKWfU3ys9IvJJbHADBftY/H51LrZzFUpyRgBp6d
        Wg/yIfpIukpiuQwA81aPqXpstX4eQ/TMBMzATVLrQb7o3pMOSCyfAWD+6in5t6fWz2TRHZ6AmXhbaj3Q
        F9VrkoVhPAaAPtS+Hn+dWj+XRfWWBMxIPQtwbmo94Lfa09MeifEYAPqxe6rHXOtns9XqGHHjBMxMvR+/
        9aDfbHWm8GMT4zMA9OeRadF7Bfx+Amaodhl7QWo98DfaeenXE9NgAOhTPQbrsdj6OW20lya7dcKM1QP8
        +NQ6AKy3epvf7RLTYQDoVz0Wv5RaP6v19rTkZTzoxNHpU6l1MNhZr02XS0yLAaBvV0gnptbPa2edmu6W
        gM7Ugbz2HD8ptQ4O26sTg16R6kRCpskAQLlZqnfk7GwL4Tp3572pHvuu+AdsOzjdKz061UsEj0u/m26d
        anFh2gwArFU/ozumOlHwCenP0u+lujbHQQmAmTAAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAA
        dMgAAAAdMgAAQIcMAADQIQMAAHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgA
        AAAdMgAAQIcMAADQIQMAAHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAd
        MgAAQIcMAADQIQMAAHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAA
        QIcMAADQIQMAAHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcM
        AADQIQMAAHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQ
        IQMAAHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMA
        AHTIAAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTI
        AAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAA
        HTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAAHTIA
        AECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAAHTIAAECH
        DAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAAHTIAAECHDAAA
        0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAAHTIAAECHDAAA0CED
        AAB0aPd0fmot2Ius/o49EgAwEV9IrUV7kX0+AQAT8t7UWrQXWf0dAMCEHJ9ai/Yie2ICACbkFqm1aC+y
        myUAYELqRMCPpNbCvYhOSfV3AAATc3RqLd6L6C4JAJioE1NrAd9Kr08AwITtmxb5UsAn0n4JAJi4a6ZT
        U2tB30j1NeprAQArYv/05tRa2NfTm1J9DQBgxeyWjkmnp9Yi3+qz6djkjH8AWHF7pbum56da4L+fti/4
        9d/1seel+pz6XABghuqCPlf+cS7uAwAAAAAAAAAAAAAAALNSm4Nc7Ef/CQCMrNbkhW/cVbuI3Tg9Pr0n
        nZlq05AL0lnpfelJ6WbJrmEAMKxaa2+eau19f6q1uNbkWptrjX53elw6PG3aLdI70totQndWXX2sthwF
        ABbv9unk1FqDW52Ujkrrtnd6YWp9sfX0irRPAgC2rtbUV6XWmrueagvwWtt36oD0rtT6AhupJpQDEwCw
        ebWWfii11tqN9M+p1vimPdM/pdYf3Ez1DXsmAAA25xKpXudvrbGbqYaA5jMBdSWw1h/YSvVyAACwcSek
        1tq6lZ6dfspN0w9S65O32h0TALB+d0mtNXWr1VpfJ/lfaCNn+2+0einAWwQBYH1qzfxwaq2pi6he7v+h
        66fWJyyyn5o2AIAdulVqraWL7NC07Y/WfGCojk8AwK49JbXW0kV2XNr2j2s+MFQfSADArm1ks5/N9g9p
        22lrPjBUX04AwK59JbXW0kX2ibTt7DUfGKo663CvBADsWK2VQ70rb2219jf/xxDtnwCAHau1srWGDlHz
        g0NkAACAnTMAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTI
        AAAAHTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAA
        HTIAAECHDAAA0CEDAAB0yAAAAB0yAABAhwwAANAhAwAAdMgAAAAdMgAAQIcMAADQIQMAAHTIAAAAHTIA
        zMhV0n9KT0p/mV4pSWpWx8gnpmNTHTt7ZABYcbun+6cPpNZ9IUnaeT9IdQz9tbRb6oUBYIXdOJ2cWveB
        JGnjfTAdnnpgAFhRx6TvpNbtlyRtvnPSA9LcGQBW0ANTPWXVuu2SpK1Xx9i5DwEGgBVzi/S91LrdkqTF
        Vc8E3DzNlQFgheyVPp1at1mStPhOS3XsnSMDwAr5L6l1eyVJw/WINEcGgBVRb/f7YmrdXknScJ2Z6hg8
        NwaAFXGr1LqtkqThq/Ov5sYAsCKOT63bKkkavto1cG4MACviNal1WyVJw/c3aW6WOgCc/zMfGKorpbk5
        KbVuqyRp+N6T5ubKqXVbF915aWk7110nzc3HUuu2SpKGr47Bc3Noat3WRXd22vb1NR8Ystojf27+KbVu
        qyRp+N6a5uaI1Lqti+6raduX1nxgyI5Kc/Oy1LqtkqThe2mam9ul1m1ddGelbZ9Y84EhOzrNjU2AJGm8
        5rgZ0N1T67Yuuo+mbe9a84Ehe3Cam6un1m2VJA3fwWlujk2t27ro3pm2vW7NB4bsKWmO6izU1u2VJA1X
        /fI6R3+WWrd30b06bXvBmg8M2evTHN02tW6vJGm46rXyOToxtW7vonte2va4NR8Ysk+muXptat1mSdLi
        ++FvrzN1emrd5kX3mLTtN9Z8YMhqw6E5X76xBpzW7ZYkLa46cX2/NEe1Ri5rc74Hph++Pa/1P4fohmmu
        Dkl1darW7ZYkbb06xtaxdq4OT63bPUS3TtuutuYDQ1dvm5uz2sLR9sCStPhOTldNc/Z7qXXbh+igtG23
        9M0ff2Do6h0Hc3eJ9EdpWfepJM25b6RHp4unuVvWCYC1A3Ct/T+0rL0A6ge5R+rBAekPU71N8ILUuj8k
        SRetjpnvTselOpb24GJpWb84viNd6Fmp9UlDdNPUm/oHXNdCuGuqDZFqowdJ0k+qY2MdI+tYednUm1um
        1po5RE9PF3poan3SEP2PBAD8xONTa80cohq4LlRn57c+aYhOSxe+9gAAnas18VOptWYO0WHpQrunen2+
        9YlDVE91AAA/ektea60coq+lWvN/yptS65OHqM45AAC2bXtuaq2VQ1TvNLiI/5ZanzxENYHsnQCgZ/X2
        xnpbXmutHKI/SBdRZ162PnmoagtiAOjZb6XWGjlUP58uok5C+FJq/YEhqpMBe9kTAAB+Vq2Bp6bWGjlE
        Z6UdnoT/l6n1h4bqVxIA9Oj+qbU2DtXz0w7dM7X+0FB9JF3kbEQAmLn6TfyU1Fobh+rotEN1MsKy97C/
        RwKAntwntdbEoaoTDXd58v1LUusPD9UZ6ZIJAHpQF437dGqtiUP1wrRL9RRB6w8PWW2BCAA9+JPUWguH
        7E5pl+qKRGem1hcYqnPTIQkA5uza6XuptRYO1efTut9194TU+iJDVjsRAsBc1Yl/b0mtNXDIHpfW7eA0
        xjXs/3MCgDn6ndRa+4as1vKrpQ3529T6YkNWT4scngBgTm6Slv3Uf/WGtGG3S60vNnSnp8skAJiD/dIy
        L/e7ttukTflgan3BoXtFAoBVV6/7n5Baa93QvS9t2v1S64suow2dtAAAEzTGSfXbOyZtWr1t4GOp9YWX
        0SMTAKyih6XW2raMFrLVfl2wp/XFl1GdvXjfBACrpLa5/35qrW3L6F5py2qC+HBq/QXLqM6avEMCgFVw
        xzTGGf/bq/P3dnjZ3426fWr9Jcuqdgp06WAApq6uqntOaq1ly6oGkIU6MbX+omX1g/S7CQCm6OFpjE30
        1vaatHDXSmM+pbG94xMATMlxqbVmLbN6tryuNTCIP02tv3TZvTLZLAiAsdUmP3+TWmvVsqu3HA6mrmF8
        Wmr9xcvujHTzBABjuHGq3Wtba9SyOzXVGj2oo1K9Ht/6BpZdvSRRewUs7GxHAFiHY1M95d5am5Zdrcm/
        lJbiean1TYxVXV7xkAQAQ7puemtqrUVj9ey0NPukT6bWNzJW56WnpkslAFikenr9sWkKJ8OvrV6W3zct
        1U1TLbqtb2jMPpPuk7a8BSIA3au1pHakrfPOWmvOmNVLEHUewigenVrf1BSqfZDvn+p6BgCwERdLD0xj
        Xg9nV/3XNJo6+e51qfWNTaU6Q/PBafCzIwFYebVWPCSNdf3+9VZvPRz9BPh67WHKE9L2vpFenGpbY+8a
        AGCteiq9ziP7SmqtIVOqzsGbzF4410/fTK1vdIp9Ov3PdGSqp3kA6MueqdaA2jxniq/v76j6ZbbeiTAp
        dfGBKZ4UuKvOTm9M9VrKTdLeCYB5uXg6Ij0q1TG/jv2tNWHK1Rq7tPf7b1S91t76plepupBDPUPwd+nP
        00PTvVO9dFDvfLheumraX5I0ieqYXMfmOkbXsbqO2XXs/j+pjuV1TB/7Ij1brTb7eVCatHqfZOublyRJ
        m+uP00p4cmrdAEmStLHqmYyVUWfZPyu1bogkSVpfL0wr98612j3pOal1gyRJ0s6rX6RXdlfbmlr+V2rd
        MEmS1O5paRZ71jgxUJKkXVdn+6/MCX/rVW9fWMV9AiRJWkbnp2PTLNUGBrWLUeuGS5LUa99Kd06zVtsG
        1z7GrTtAkqTe+ng6NHWhLiB0QmrdEZIk9VJdUXcyF/ZZljq78bjkvABJUm+dm34/zeJM/82qC/B4SUCS
        1EufSIcnYp/03FRvf2jdWZIkrXq1xtXmPrXm8TNunepkiNYdJ0nSqnZ6muylfKfiEulJqV4fad2JkiSt
        St9LT0gXT6zTtdIrU+sOlSRp6r0hXTOxSXdIH0qtO1eSpKn1weTp/gWpt0ncNRkEJElT7aPpmNT1W/uG
        UpdF/JX0/tS68yVJWnYnpfuklb1076o5KtXrKxek1g9EkqShqrWndvG7TWIkB6baUfAzqfVDkiRpUZ2Z
        jk8HJyZij1RXUnpR+npq/eAkSdpoX0svSHdMnuafuL1TnTT4/PSF1PqBSpK0oz6fnpeOTnslVtQN0x+k
        E1NNcq0ftiSp376a6ryyR6UbJGaonr45LD0kPSO9I3nJQJL6qX4RfHt6enpwun7y1r2O1cmEt0oPTH+c
        npNeneofSb2383Op/tFU56fWPypJ0vKrY/L243Mdq+uYXcfuOobXsbyO6Q9IR6YrJwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgM7Zt+/9UYTUi
        6NboDwAAAABJRU5ErkJggg==
</value>
  </data>
</root>